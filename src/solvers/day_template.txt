use crate::solvers::prelude::*;

pub struct Day00 {}

impl FromStr for Day00 {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, String> {
        // TODO
        Ok(Day00 {})
    }
}

impl Solver for Day00 {
    const INPUT_PATH: &'static str = "inputs/20XX/00.txt";

    fn run_part1(&self) -> SolverResult {
        // TODO
        SolverResult::Invalid
    }

    fn run_part2(&self) -> SolverResult {
        // TODO
        SolverResult::Invalid
    }
}

#[cfg(test)]
mod tests {
    use super::*;
    use indoc::indoc;

    const TEST_INPUT: &str = indoc!{
        "TODO"
    };

    #[test]
    fn test() {
        let day = Day00::from_str(TEST_INPUT).unwrap();
        assert_eq!(day.run_part1(), SolverResult::Invalid, "Part1");
        assert_eq!(day.run_part2(), SolverResult::Invalid, "Part2");
    }
}
